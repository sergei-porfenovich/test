<?php

/**
 * @file
 * Google Adwords Conversion Tracking Module.
 */

/**
 * Implements hook_field_info().
 *
 * Provides the description of the field.
 */
function google_adwords_field_info() {
  return [
    // We name our field as the associative name of the array.
    'google_adwords_tracking' => [
      'label' => t('Google Adwords'),
      'description' => t('Add the Google Adwords Trackin Conversion info for this entity.'),
      'settings' => [],
      'instance_settings' => [],
      'default_widget' => 'google_adwords_text',
      'default_formatter' => 'google_adwords_default',
    ],
  ];
}

/**
 * Implements hook_field_is_empty().
 *
 * hook_field_is_emtpy() is where Drupal asks us if this field is empty.
 * Return TRUE if it does not contain data, FALSE if it does. This lets
 * the form API flag an error when required fields are empty.
 */
function google_adwords_field_is_empty($item, $field) {
  return empty($item['conversion_id']);
}

/**
 * Implements hook_field_formatter_info().
 *
 * @see google_adwords_field_formatter_view().
 */
function google_adwords_field_formatter_info() {
  return [
    'google_adwords_default' => [
      'label' => t('Default'),
      'field types' => ['google_adwords_tracking'],
    ],
  ];
}

/**
 * Implements hook_field_formatter_view().
 *
 * @see google_adwords_field_formatter_info().
 */
function google_adwords_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $user = \Drupal::currentUser();
  $element = [];

  $trackable = 0;
  if (is_array($user->roles)) {
    foreach ($user->roles as $role) {
      $role = str_replace(' ', '_', $role);
      $trackable += // @FIXME: &#039;google_adwords_track_&#039; . $role must be added to your module's default configuration.
        \Drupal::config('google_adwords.settings')
          ->get('google_adwords_track_' . $role);
    }
  }

  if ($trackable > 0) {
    switch ($display['type']) {
      case 'google_adwords_default':
        foreach ($items as $delta => $item) {
          $element[$delta] = [
            '#markup' => _theme('google_adwords', $item),
            '#attached' => [
              'css' => [drupal_get_path('module', 'google_adwords') . '/google_adwords.css'],
            ],
          ];
        }
        break;
    }
  }

  return $element;
}

/**
 * Implements hook_field_widget_info().
 *
 * These widget types will eventually show up in hook_field_widget_form,
 * where we will have to flesh them out.
 *
 * @see google_adwords_field_widget_form()
 */
function google_adwords_field_widget_info() {
  return [
    'google_adwords_text' => [
      'label' => t('Google AdWords Text Field'),
      'field types' => ['google_adwords_tracking'],
    ],
  ];
}

/**
 * Implements hook_field_widget_form().
 *
 * hook_widget_form() is where Drupal tells us to create form elements for
 * our field's widget.
 */
function google_adwords_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  $language = \Drupal::languageManager()->getCurrentLanguage();
  $widget = $instance['widget'];

  if ($widget['type'] == 'google_adwords_text') {
    $element['#type'] = 'fieldset';
    $element['#attributes']['class'][] = 'google-adwords-textfields';
    $element['#attached']['css'][] = drupal_get_path('module', 'google_adwords') . '/google_adwords.css';

    $element['conversion_id'] = [
      '#type' => 'textfield',
      '#title' => 'Conversion ID',
      '#default_value' => isset($items[$delta]['conversion_id']) ? $items[$delta]['conversion_id'] : \Drupal::config('google_adwords.settings')
        ->get('google_adwords_conversion_id'),
    ];
    $element['conversion_language'] = [
      '#type' => 'textfield',
      '#title' => 'Language',
      '#default_value' => isset($items[$delta]['conversion_language']) ? $items[$delta]['conversion_language'] : // @FIXME: This variable's value could not be added to your module's default configuration, because it is dynamic (NULL was used instead). Please set a valid default for this variable.
        \Drupal::config('google_adwords.settings')
          ->get('google_adwords_conversion_language'),
    ];
    $element['conversion_format'] = [
      '#type' => 'textfield',
      '#title' => 'Format',
      '#default_value' => isset($items[$delta]['conversion_format']) ? $items[$delta]['conversion_format'] : \Drupal::config('google_adwords.settings')
        ->get('google_adwords_conversion_format'),
    ];
    $element['conversion_color'] = [
      '#type' => 'textfield',
      '#title' => 'Color',
      '#default_value' => isset($items[$delta]['conversion_color']) ? $items[$delta]['conversion_color'] : \Drupal::config('google_adwords.settings')
        ->get('google_adwords_conversion_color'),
      '#size' => 7,
      '#maxlength' => 6,
    ];
    $element['conversion_label'] = [
      '#type' => 'textfield',
      '#title' => 'Report label',
      '#default_value' => isset($items[$delta]['conversion_label']) ? $items[$delta]['conversion_label'] : '',
    ];
  }

  return $element;
}

/**
 * Implements hook_theme().
 */
function google_adwords_theme() {
  return [
    'google_adwords' => [
      'variables' => [
        'conversion_id' => NULL,
        'conversion_language' => NULL,
        'conversion_format' => NULL,
        'conversion_color' => NULL,
        'conversion_label' => NULL,
      ],
      'template' => 'google_adwords',
    ],
  ];
}

/**
 * Implements template_preprocess_HOOK().
 * Loads the proper AdWords external JavaScript file.
 */
function template_preprocess_google_adwords(&$variables) {
  $variables['google_js'] = \Drupal::config('google_adwords.settings')
    ->get('google_adwords_external_script');
}

/**
 * Implements hook_permission().
 */
function google_adwords_permission() {
  return [
    'administer google adwords module' => [
      'title' => t('Administer Google Adwords Module'),
    ],
    'edit google adwords parameters' => [
      'title' => t('Edit Google Adwords Parameters'),
    ],
  ];
}

/**
 * Implements hook_menu().
 */
function google_adwords_menu() {
  $items = [];
  $items['admin/config/system/google_adwords'] = [
    'title' => 'Google AdWords',
    'description' => 'Google AdWords Settings page.',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['google_adwords_admin_settings'],
    'access arguments' => ['administer google adwords module'],
    'file' => 'google_adwords.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  ];
  $items['admin/config/system/google_adwords/default'] = [
    'title' => 'Google Adwords',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 0,
  ];
  return $items;
}

/**
 * Register a new conversion tracking.
 *
 * The rules integration calls this function.
 * Use this to set a custom tracking not related to a entity.
 */
function google_adwords_add_tracking($conversion_id, $label = NULL, $value = NULL, $language = NULL, $color = NULL, $format = NULL) {
  $cache = &drupal_static(__FUNCTION__, []);

  $label = ($label) ? $label : base64_encode($conversion_id);
  $language = ($language) ? $language : 'en';
  $color = ($color) ? $color : 'FFFFFF';
  $format = ($format) ? $format : 1;

  $cache[$conversion_id] = [
    'conversion_id' => $conversion_id,
    'label' => $label,
    'language' => $language,
    'color' => $color,
    'format' => $format,
    'value' => $value,
  ];
}
